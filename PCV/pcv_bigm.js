function main() {
  let v = [
    [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],
    [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],
    [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0],
    [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0],
    [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
    [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
    [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0],
    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0],
    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0],
    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0],
    [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0],
    [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0],
    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0],
    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0],
  ];

  let A = [
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  ];

  let f = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
  ];
  let B = [
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    3,
  ];
  let Z = [[
    63.6,
    53.2,
    90.4,
    159.4,
    63.6,
    90.8,
    106.8,
    169.4,
    53.2,
    90.8,
    135.4,
    157.6,
    90.4,
    106.8,
    135.4,
    125.4,
    159.4,
    169.4,
    157.6,
    125.4,
    99999,
    99999,
    99999,
    99999,
    99999,
    99999,
    99999,
    99999,
    99999,
    99999,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
  ]];
  let pos=0, pos0=0;
  let cont = 2,
    menor=0,
    col=0,
    nmenor=0,
    opc=0,
    div=0,
    pivo=0,
    lin=0;
  Z.forEach((item, k) => {
    if (item === 99999) {
      pos = k;
    }else{
      pos=0;
    }
    pos0 = Z[0][pos];
    pos = pos % 20;
    for (let j = 0; j < 20; j += 1) {
      Z[0][j] = Z[0][j] - pos0 * v[pos][j];
    }
    for (let j = 0; j < 10; j += 1) {
      Z[0][j + 20] = Z[0][j + 20] - pos0 * A[pos][j];
      Z[0][j + 20] = Z[0][j + 20] - pos0 * A[pos][j];
    }
    for (let j = 0; j < 25; j += 1) {
      Z[0][j + 30] = Z[0][j + 30] - pos0 * f[pos][j];
    }
    Z[0][55] = Z[0][55] - pos0 * B[pos];
  });

  for (let i = 0; i < 35; i++) {
    for (let j = 0; j < 20; j++) {
      console.log(v[i][j]);
    }
    for (let j = 0; j < 10; j++) {
      console.log(A[i][j]);
    }
    for (let j = 0; j < 20; j++) {
      console.log(f[i][j]);
    }
    console.log(B[i]);
    console.log("\n\n");
  }
  for (let i = 0; i < 35; i++) {
    console.log(Z[0][i]);
    console.log("\n\n\n\n");
  }

  while (cont > 1) {
    menor = 0;
    cont = 0;
    for (let i = 0; i < 55; i++) {
      if (Z[0][i] < 0) {
        cont++;
        if (menor > Z[0][i]) {
          menor = Z[0][i];
          col = i;
        }
      }
    }
    pos = col;
    console.log("\n\tMais negativo " + menor, col + "\n");
    nmenor = 99999;
    if (pos < 20) {
      opc = 1;
      for (let i = 0; i < 35; i++) {
        if (v[i][col] !== 0) {
          div = B[i] / v[i][col];
          console.log("\n\n B1 i= " + i + " div " + div + B[i] + " / "  + v[i][col]);
          if (div > 0 && nmenor < div) {
            nmenor = div;
            lin = 1;
          }
        }
      }
      console.log(`Pivosv: l ${lin} c ${col}`);
    } else {
      if (pos > 30) {
        opc = 2;
        for (let i = 0; i < 35; i++) {
          col = pos - 20;
          if (A[i][col] !== 0) {
            div = B[i] / A[i][col];
            console.log("\n\n B2 i= " + i + " div " + div + B[i] + " / " + A[i][col]);
            if (div > 0 && nmenor < div) {
              nmenor = div;
              lin = i;
            }
          }
        }
        console.log(`PivosA: l ${lin} c ${col}`);
      } else {
        opc = 3;
        for (let i = 0; i < 35; i++) {
          col = pos - 30;
          if (f[i][col] != 0) {
            div = B[i] / f[i][col];
            console.log("\n\n B3 i= " + i + " div " + div + B[i] + " / " + f[i][col]);
            if (div > 0 && nmenor < div) {
              nmenor = div;
              lin = i;
            }
          }
        }
        console.log(`PivosF: l ${lin} c ${col}`);
      }
    }
    console.log(`cont ${cont}\n`);
    // pos0 = prompt("");

    if (opc === 1) {
      pivo = v[lin][col];
    }
    if (opc === 2) {
      pivo = A[lin][col];
    }
    if (opc === 3) {
      pivo = f[lin][col];
    }

    for (let i = 0; i < 20; i++) {
      v[lin][i] = v[lin][i] / pivo;
    }
    for (let i = 0; i < 10; i++) {
      A[lin][i] = A[lin][i] / pivo;
    }
    for (let i = 0; i < 25; i++) {
      f[lin][i] = f[lin][i] / pivo;
    }

    for (let i = 0; i < 35; i++) {
      if (opc === 1) {
        pos0 = v[lin][col];
      }
      if (opc === 2) {
        pos0 = A[lin][col];
      }
      if (opc === 3) {
        pos0 = f[lin][col];
      }

      for (let j = 0; j < 20; j++) {
        // if (j === 33) {
          // }
          // if (v === undefined || v === null) console.warn('v é und na posi', i, j)
          // if (Z === undefined) console.warn('v é und na posi', i, j)
          // console.warn('v', v,'i',i,'j',j);
          // if (v[i][j] === undefined || v[i][j] === null) console.warn('v é und na posi', i, j)
          // if (Z[0][j] === undefined) console.warn("v é und na posi", i, j);
          // if (v[lin][j] === undefined) console.warn("v é und na posi", lin, j);
            // (v[i][j], Z[0][j], pos0,v[lin][j], i, j, lin)
          v[i][j] = Z[0][j] - pos0 * v[lin][j];
        // console.warn('j',j)
        // v[i][j] = Z[0][i][j] - pos0 * v[lin][j];
      }

      for (let j = 0; j < 10; j++) {
        A[i][j + 20] = Z[0][j + 20] - pos0 * A[lin][j];
        // A[i][j+20] = Z[0][i][j+20] - pos0 * A[lin][j];
      }
      for (let j = 0; j < 25; j++) {
        f[i][j + 30] = Z[0][j + 30] - pos0 * f[lin][j];
        // f[i][j+30] = Z[0][i][j+30] - pos0 * f[lin][j];
      }
      // B[i][55] = Z[0][i][55] -pos0*B[lin][0]
      B[i] = Z[0][i] - pos0 * B[lin];
    }

    for (let j = 0; j < 20; j++) {
      Z[0][j] = Z[0][j] - pos0 * v[lin][j];
      //Z[0][0][j] = Z[0][0][j] - pos0 * v[lin][j];
    }

    for (let j = 0; j < 10; j++) {
      Z[0][j + 20] = Z[0][j + 20] - pos0 * A[lin][j];
      // Z[0][0][j+20] = Z[0][0][j+20] - pos0 * A[lin][j];
    }
    for (let j = 0; j < 25; j++) {
      Z[0][j + 30] = Z[0][j + 30] - pos0 * f[lin][j];
      // Z[0][0][j+30] = Z[0][0][j+30] - pos0 * f[lin][j];
    }
    // B[i][55] = Z[0][i][55] -pos0*B[lin][0]
    Z[0][55] = Z[0][55] - pos0 * B[lin];

    console.log("Z ajustado\n\n");

    for(let i=0;i<35;i++){
      for(let j=0; j<20;j++){
        console.log(`V ${v[i][j]} `)
      }
      for(let j=0; j<10;j++){
        console.log(`A ${A[i][j]} `)
      }
      for(let j=0; j<20;j++){
        console.log(`f ${f[i][j]} `)
      }
      console.log(`B ${B[i]} `)
      console.log(`\n\n `)
      for(let j=0; j<56;j++){
        console.log(`Z ${Z[0][j]} `)
        
      }
      console.log(`\n\n\n `)
    }

  }

  console.log('\n\n\n');
  console.info(`Valor das matrizes\n\n`, v);
  console.info(A);
  console.info(f);
  console.info(z);
  console.info(`Termos independentes\n\n`, B);

}
